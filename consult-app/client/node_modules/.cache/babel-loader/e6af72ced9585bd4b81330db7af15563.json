{"ast":null,"code":"var _jsxFileName = \"/Users/EmilyHPark_1/codeworks/Course/Week-8/consult-sched/consult-app/client/src/DoctorList/DoctorList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './DoctorList.css';\nimport Doctor from '../Doctor/Doctor';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DoctorList(props) {\n  _s();\n\n  const [allDoctors, setAllDoctors] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [doctorsFetched, setDoctorsFetched] = useState(false);\n\n  async function getAll() {\n    const result = await axios.get('https://ep-doctor-api.herokuapp.com/doctors');\n    setAllDoctors(result);\n    setDoctorsFetched(true);\n  }\n\n  useEffect(() => {\n    //     axios.get('https://ep-doctor-api.herokuapp.com/doctors')\n    //     .then(response => {\n    //         setAllDoctors(response.data);\n    // })\n    getAll();\n  }, []); // console.log(allDoctors);\n\n  function showDoctors(arr) {\n    return arr.map(doctor => {\n      return /*#__PURE__*/_jsxDEV(Doctor, {\n        doctor: doctor\n      }, doctor.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this);\n    });\n  }\n\n  function filterDoctors() {\n    const newArr = [...allDoctors];\n    const searchWord = searchTerm.charAt(0).toUpperCase() + searchTerm.slice(1);\n    const resultArr = []; //filter doctors based on input value\n\n    for (let i = 0; i < newArr.length; i++) {\n      if (newArr[i].drug_list.includes(searchWord)) {\n        resultArr.push( /*#__PURE__*/_jsxDEV(Doctor, {\n          doctor: newArr[i]\n        }, newArr[i].id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 32\n        }, this));\n      }\n    }\n\n    return resultArr;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"doctor-list\",\n    id: \"list\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        filterDoctors();\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Search For A Doctor By Drug Expertise:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search for a drug...\",\n          value: searchTerm,\n          onChange: e => {\n            setSearchTerm(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), doctorsFetched ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filtered-doctors-list\",\n        children: searchTerm ? filterDoctors(allDoctors, searchTerm) : showDoctors(allDoctors)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\\"Loading\\\"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DoctorList, \"J6/eZDJVt3rDr/oyG3dgjtdxheQ=\");\n\n_c = DoctorList;\n\nvar _c;\n\n$RefreshReg$(_c, \"DoctorList\");","map":{"version":3,"sources":["/Users/EmilyHPark_1/codeworks/Course/Week-8/consult-sched/consult-app/client/src/DoctorList/DoctorList.js"],"names":["React","useState","useEffect","Doctor","axios","DoctorList","props","allDoctors","setAllDoctors","searchTerm","setSearchTerm","doctorsFetched","setDoctorsFetched","getAll","result","get","showDoctors","arr","map","doctor","id","filterDoctors","newArr","searchWord","charAt","toUpperCase","slice","resultArr","i","length","drug_list","includes","push","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './DoctorList.css';\nimport Doctor from '../Doctor/Doctor';\nimport axios from 'axios';\n\nexport default function DoctorList(props) {\n    const [allDoctors, setAllDoctors] = useState([]);\n    const [searchTerm, setSearchTerm] = useState(\"\"); \n    const [doctorsFetched, setDoctorsFetched] = useState(false);\n\n    async function getAll () {\n        const result = await axios.get('https://ep-doctor-api.herokuapp.com/doctors')\n        setAllDoctors(result);\n        setDoctorsFetched(true);\n    }\n    \n    useEffect(()=> {\n        //     axios.get('https://ep-doctor-api.herokuapp.com/doctors')\n        //     .then(response => {\n        //         setAllDoctors(response.data);\n        // })\n        getAll()\n    },[]);\n    // console.log(allDoctors);\n\n    function showDoctors(arr) {\n        return arr.map(doctor => {\n            return (\n                <Doctor key={doctor.id} doctor={doctor}/>\n            )\n        })\n    }\n\n    function filterDoctors() {\n        const newArr = [...allDoctors];\n        const searchWord = searchTerm.charAt(0).toUpperCase() + searchTerm.slice(1);\n        \n        const resultArr = [];\n        //filter doctors based on input value\n        for(let i=0;i<newArr.length; i++) {\n            if(newArr[i].drug_list.includes(searchWord)) {\n                resultArr.push(<Doctor key={newArr[i].id} doctor={newArr[i]} />)\n            }\n        }\n        return resultArr;\n    }\n\n    return(\n        <div className=\"doctor-list\" id=\"list\">\n            <form onSubmit={ e =>\n                {\n                    e.preventDefault();\n                    filterDoctors();\n                }}>\n                <div className=\"search-box\"> \n                    \n                    <h2>Search For A Doctor By Drug Expertise:</h2>\n                    \n                    <input type=\"text\" placeholder=\"Search for a drug...\" \n                        value={searchTerm}\n                        onChange={e => {\n                            setSearchTerm(e.target.value)\n                        }}\n                    />\n                    {/* <button id=\"search-button\">Search</button> */}\n                </div>\n                        \n                { doctorsFetched\n                ? \n                    <div className=\"filtered-doctors-list\"> \n                        {searchTerm ? filterDoctors(allDoctors, searchTerm) : showDoctors(allDoctors)}\n                    </div>\n                : <h2>\"Loading\"</h2>\n                }\n            </form>\n        </div>\n    )\n\n\n}"]},"metadata":{},"sourceType":"module"}