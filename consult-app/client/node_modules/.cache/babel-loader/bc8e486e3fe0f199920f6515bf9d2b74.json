{"ast":null,"code":"var _jsxFileName = \"/Users/EmilyHPark_1/codeworks/Course/Week-8/consult-sched/consult-app/client/src/Contexts/DoctorContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useReducer, useEffect } from 'react';\nimport AppReducer from './AppReducer'; //initial state\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  appointmentList: [],\n  appointmentDone: []\n}; // create context \n\nexport const DoctorContext = /*#__PURE__*/createContext(initialState); //provider components \n\nexport const DoctorProvider = props => {\n  _s();\n\n  const [state, dispatch] = useReducer(AppReducer, initialState); //actions \n\n  const addDoctorToApptList = doctor => {\n    dispatch({\n      type: \"ADD_DOCTOR_TO_LIST\",\n      payload: doctor\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(DoctorContext.Provider, {\n    value: {\n      appointmentList: state.appointmentList,\n      appointmentDone: state.appointmentDone,\n      addDoctorToApptList\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DoctorProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = DoctorProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"DoctorProvider\");","map":{"version":3,"sources":["/Users/EmilyHPark_1/codeworks/Course/Week-8/consult-sched/consult-app/client/src/Contexts/DoctorContext.js"],"names":["React","createContext","useReducer","useEffect","AppReducer","initialState","appointmentList","appointmentDone","DoctorContext","DoctorProvider","props","state","dispatch","addDoctorToApptList","doctor","type","payload","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,UAA9B,EAA0CC,SAA1C,QAA0D,OAA1D;AACA,OAAOC,UAAP,MAAuB,cAAvB,C,CAEA;;;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,eAAe,EAAE,EADA;AAEjBC,EAAAA,eAAe,EAAE;AAFA,CAArB,C,CAKA;;AACA,OAAO,MAAMC,aAAa,gBAAGP,aAAa,CAACI,YAAD,CAAnC,C,CAEP;;AACA,OAAO,MAAMI,cAAc,GAAGC,KAAK,IAAI;AAAA;;AACnC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,UAAU,CAACE,UAAD,EAAaC,YAAb,CAApC,CADmC,CAGnC;;AACA,QAAMQ,mBAAmB,GAAGC,MAAM,IAAI;AAClCF,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAE,oBAAP;AAA6BC,MAAAA,OAAO,EAAEF;AAAtC,KAAD,CAAR;AACH,GAFD;;AAIA,sBACI,QAAC,aAAD,CAAe,QAAf;AACI,IAAA,KAAK,EAAE;AACHR,MAAAA,eAAe,EAAEK,KAAK,CAACL,eADpB;AAEHC,MAAAA,eAAe,EAAEI,KAAK,CAACJ,eAFpB;AAGHM,MAAAA;AAHG,KADX;AAAA,cAOKH,KAAK,CAACO;AAPX;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAnBM;;GAAMR,c;;KAAAA,c","sourcesContent":["import React, {createContext, useReducer, useEffect} from 'react';\nimport AppReducer from './AppReducer';\n\n//initial state\nconst initialState = {\n    appointmentList: [],\n    appointmentDone: []\n};\n\n// create context \nexport const DoctorContext = createContext(initialState);\n\n//provider components \nexport const DoctorProvider = props => {\n    const [state, dispatch] = useReducer(AppReducer, initialState);\n\n    //actions \n    const addDoctorToApptList = doctor => {\n        dispatch({type: \"ADD_DOCTOR_TO_LIST\", payload: doctor});\n    }\n\n    return (\n        <DoctorContext.Provider\n            value={{\n                appointmentList: state.appointmentList, \n                appointmentDone: state.appointmentDone, \n                addDoctorToApptList\n                }}\n        > \n            {props.children}\n        </DoctorContext.Provider>   \n    );\n};"]},"metadata":{},"sourceType":"module"}