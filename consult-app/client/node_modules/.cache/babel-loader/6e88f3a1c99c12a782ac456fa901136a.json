{"ast":null,"code":"var _jsxFileName = \"/Users/EmilyHPark_1/codeworks/Course/Week-8/consult-sched/consult-app/client/src/DoctorList/DoctorList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './DoctorList.css';\nimport Doctor from '../Doctor/Doctor';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DoctorList(props) {\n  _s();\n\n  const [allDoctors, setAllDoctors] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  useEffect(() => {\n    axios.get('https://ep-doctor-api.herokuapp.com/doctors').then(response => {\n      setAllDoctors(response.data);\n    });\n  }, []);\n\n  function showDoctors(arr) {\n    const firstNum = Math.floor(Math.random() * 20);\n    const lastNum = firstNum + Math.floor(Math.random() * 20);\n    return arr.slice(firstNum, lastNum).map(doctor => {\n      return /*#__PURE__*/_jsxDEV(Doctor, {\n        doctor: doctor\n      }, doctor.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this);\n    });\n  }\n\n  function filterDoctors(arr, keyword) {\n    const newArr = arr;\n    const searchTerm = keyword.toLowerCase();\n    console.log(\"hi\");\n    console.log(newArr[9]);\n    console.log(newArr[9].drug_list, \"drug_list\");\n    console.log(searchTerm); //filter doctors based on input value\n\n    for (let i = 0; i < newArr.length; i++) {\n      if (newArr[i].drug_list.includes(searchTerm.toLowerCase())) {\n        return /*#__PURE__*/_jsxDEV(Doctor, {\n          doctor: newArr[i]\n        }, newArr[i].id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this);\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"doctor-list\",\n    id: \"list\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        filterDoctors();\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Search For A Doctor By Drug Expertise:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search for a drug\",\n          value: searchTerm,\n          onChange: event => setSearchTerm(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"search-button\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filtered-doctors-list\",\n        children: searchTerm.length ? filterDoctors(allDoctors, searchTerm) : showDoctors(allDoctors)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DoctorList, \"qtN3m8cMuDnBo3vsxN0OjA6uYeY=\");\n\n_c = DoctorList;\n\nvar _c;\n\n$RefreshReg$(_c, \"DoctorList\");","map":{"version":3,"sources":["/Users/EmilyHPark_1/codeworks/Course/Week-8/consult-sched/consult-app/client/src/DoctorList/DoctorList.js"],"names":["React","useState","useEffect","Doctor","axios","DoctorList","props","allDoctors","setAllDoctors","searchTerm","setSearchTerm","get","then","response","data","showDoctors","arr","firstNum","Math","floor","random","lastNum","slice","map","doctor","id","filterDoctors","keyword","newArr","toLowerCase","console","log","drug_list","i","length","includes","e","preventDefault","event","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './DoctorList.css';\nimport Doctor from '../Doctor/Doctor';\nimport axios from 'axios';\n\nexport default function DoctorList(props) {\n    const [allDoctors, setAllDoctors] = useState([]);\n    const [searchTerm, setSearchTerm] = useState(\"\");\n    \n    useEffect(()=> {\n            axios.get('https://ep-doctor-api.herokuapp.com/doctors')\n            .then(response => {\n            setAllDoctors(response.data)\n        })\n    },[]);\n\n    function showDoctors(arr) {\n        const firstNum = Math.floor(Math.random()*20);\n        const lastNum = firstNum + Math.floor(Math.random()*20);\n        return arr.slice(firstNum, lastNum).map(doctor => {\n            return (\n                <Doctor key={doctor.id} doctor={doctor}/>\n            )\n        })\n    }\n\n    function filterDoctors(arr, keyword) {\n        const newArr = arr;\n        const searchTerm = keyword.toLowerCase();\n        console.log(\"hi\")\n        console.log(newArr[9]);\n        console.log(newArr[9].drug_list, \"drug_list\");\n        console.log(searchTerm);\n        //filter doctors based on input value\n        for(let i=0;i<newArr.length; i++) {\n            if(newArr[i].drug_list.includes(searchTerm.toLowerCase())) {\n                return ( \n                        <Doctor key={newArr[i].id} doctor={newArr[i]} />\n                    )\n            }\n        }\n    }\n\n    return(\n        <div className=\"doctor-list\" id=\"list\">\n            <form onSubmit={ e =>\n                {\n                    e.preventDefault();\n                    filterDoctors();\n                }}>\n                <div className=\"search-box\"> \n                    \n                    <h2>Search For A Doctor By Drug Expertise:</h2>\n                    <input type=\"text\" placeholder=\"Search for a drug\" \n                        value={searchTerm}\n                        onChange={(event) => setSearchTerm(event.target.value)}\n                    />\n                    <button id=\"search-button\">Search</button>\n                </div>\n                <div className=\"filtered-doctors-list\"> \n                    {searchTerm.length ? filterDoctors(allDoctors, searchTerm) : showDoctors(allDoctors)}\n                </div>\n            </form>\n        </div>\n    )\n\n\n}"]},"metadata":{},"sourceType":"module"}